name: Build plugin archive

on:
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: docker
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build plugin archive
        run: |
          chmod +x worker
          ./worker build --out dist

      - name: Determine release tag
        id: meta
        env:
          RELEASE_TAG: ${{ github.event_name == 'release' && github.event.release.tag_name || '' }}
        run: |
          if [ -n "$RELEASE_TAG" ]; then
            TAG="$RELEASE_TAG"
          elif [ -n "${GITHUB_REF_NAME:-}" ]; then
            TAG="$GITHUB_REF_NAME"
          else
            TAG="manual"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Rename archive
        run: |
          DEST="dist/mas-tokenbot-${{ steps.meta.outputs.tag }}.mbp"
          SRC="$(echo dist/*.mbp)"
          mv "$SRC" "$DEST"

      - name: Upload release asset
        if: github.event_name == 'release'
        env:
          ASSET_PATH: dist/mas-tokenbot-${{ steps.meta.outputs.tag }}.mbp
          RELEASE_ID: ${{ github.event.release.id }}
          REPOSITORY: ${{ github.repository }}
          SERVER_URL: ${{ github.server_url }}
          TOKEN: ${{ github.token }}
          ALT_TOKEN: ${{ secrets.GITEA_TOKEN }}
        run: |
          TOKEN_VALUE="${TOKEN:-${ALT_TOKEN:-}}"
          if [ -z "$TOKEN_VALUE" ]; then
            echo "No token available in job token or GITEA_TOKEN; cannot upload asset." >&2
            exit 1
          fi

          if [ ! -f "$ASSET_PATH" ]; then
            echo "Asset not found at $ASSET_PATH" >&2
            exit 1
          fi

          ASSET_NAME="$(basename "$ASSET_PATH")"
          API_BASE="${SERVER_URL%/}/api/v1/repos/${REPOSITORY}/releases/${RELEASE_ID}"

          existing_id="$(
            curl -fsSL -H "Authorization: token $TOKEN_VALUE" "$API_BASE/assets" \
              | jq -r --arg name "$ASSET_NAME" '.[] | select(.name == $name) | .id' \
              | head -n1
          )"

          if [ -n "$existing_id" ] && [ "$existing_id" != "null" ]; then
            curl -fsSL -X DELETE \
              -H "Authorization: token $TOKEN_VALUE" \
              "$API_BASE/assets/$existing_id" >/dev/null
          fi

          curl -fsSL -X POST \
            -H "Authorization: token $TOKEN_VALUE" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$ASSET_PATH" \
            "$API_BASE/assets?name=$ASSET_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: mas-tokenbot-${{ steps.meta.outputs.tag }}
          path: dist/mas-tokenbot-${{ steps.meta.outputs.tag }}.mbp
